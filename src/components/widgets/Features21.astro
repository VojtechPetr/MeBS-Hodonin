---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import ItemGrid3 from '~/components/ui/ItemGrid3.astro';
import type { Features21 as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  structure = [],
  columns = 3,
  defaultIcon,
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props as Props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-4xl ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />

  {
    structure &&
      structure.map((department, index) => (
        <div class={`mb-8 ${index % 2 === 0 ? 'bg-blue-100' : ''} p-4`} data-key={department.department}>
          <h2 class="text-xl font-bold mb-4">{department.department}</h2>
          {department.contacts && (
            <ItemGrid3
              items={department.contacts.map((contact) => ({
                title: contact.name,
                description: contact.title,
                icon: contact.icon,
                contacts: contact.contactInfo,
              }))}
              columns={columns}
              defaultIcon={defaultIcon}
              classes={{
                title: 'text-lg',
                container: 'gap-4 md:gap-6',
                panel:
                  'text-center bg-page items-center md:text-left rtl:md:text-right md:items-start p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-800',
                icon: 'w-12 h-12 mb-6 text-primary',
                ...((classes?.items as Record<string, never>) ?? {}),
              }}
            />
          )}
        </div>
      ))
  }
</WidgetWrapper>
